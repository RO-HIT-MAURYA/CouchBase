package com.print.couchbase;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.ArrayMap;

import com.couchbase.lite.Array;
import com.couchbase.lite.BasicAuthenticator;
import com.couchbase.lite.CouchbaseLiteException;
import com.couchbase.lite.DataSource;
import com.couchbase.lite.Database;
import com.couchbase.lite.DatabaseConfiguration;
import com.couchbase.lite.Document;
import com.couchbase.lite.Endpoint;
import com.couchbase.lite.Expression;
import com.couchbase.lite.MutableArray;
import com.couchbase.lite.MutableDocument;
import com.couchbase.lite.Query;
import com.couchbase.lite.QueryBuilder;
import com.couchbase.lite.Replicator;
import com.couchbase.lite.ReplicatorChange;
import com.couchbase.lite.ReplicatorChangeListener;
import com.couchbase.lite.ReplicatorConfiguration;
import com.couchbase.lite.ResultSet;
import com.couchbase.lite.SelectResult;
import com.couchbase.lite.URLEndpoint;
import com.couchbase.lite.internal.support.Log;

import org.json.JSONException;
import org.json.JSONObject;

import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

public class MainActivity extends AppCompatActivity {


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        /*List<String> list = new ArrayList<>();
        list.add("rohit");
        String array[] = new String[list.size()];
        array = list.toArray(array);*/

        /*Map<String,String> map = new ArrayMap<>();
        map.put("name","rohit");*/

        /*String[] array = new String[1];
        array[0]="rohit";*/

        MutableArray mutableArray = new MutableArray();
        mutableArray.addString("rohit");

        //// Create a new document (i.e. a record) in the database.
        DatabaseConfiguration config = new DatabaseConfiguration(getApplicationContext());
        try {
            Database database = new Database("mydb", config);
            MutableDocument mutableDoc = new MutableDocument()
                    .setFloat("version", 2.0F)
                    .setString("type", "SDK")
                    .setString("dummy","{\n" +
                            "    \"_id\": \"hotel123\",\n" +
                            "    \"type\": \"hotel\",\n" +
                            "    \"name\": \"Apple Droid\"\n" +
                            "}")
                    .setValue("jo",mutableArray);

            // Save it to the database.
            database.save(mutableDoc);


// Update a document.
            mutableDoc = database.getDocument(mutableDoc.getId()).toMutable();
            mutableDoc.setString("language", "Java");
            database.save(mutableDoc);
            Document document = database.getDocument(mutableDoc.getId());
// Log the document ID (generated by the database) and properties
            Log.e("Document ID :: ", "" + document.getId());
            Log.e("Learning ", "" + document.getString("language"));
            Log.e("dummyIs",document.getString("dummy"));
            Log.e("arrayIs",document.getArray("jo").getString(0));


            // Create a query to fetch documents of type SDK.
            Query query = QueryBuilder.select(SelectResult.all())
                    .from(DataSource.database(database))
                    .where(Expression.property("type").equalTo(Expression.string("SDK")));
            ResultSet result = query.execute();
            Log.e( "Number of rows ::  ","" + result.allResults().size());
        } catch (Exception e)
        {
            e.printStackTrace();
            Log.e("exceptionIs",e.toString());
        }
    }

}
